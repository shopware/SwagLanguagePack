const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BJRzMIyM.js","assets/index-B2v7y-5u.css"])))=>i.map(i=>d[i]);
const{Component:S,Defaults:$}=Shopware,{Criteria:m}=Shopware.Data;S.override("sw-language-switch",{computed:{languageCriteria(){return this.$super("languageCriteria").addFilter(m.multi("OR",[m.equals("extensions.swagLanguagePackLanguage.id",null),m.equals("extensions.swagLanguagePackLanguage.salesChannelActive",!0),m.equals("id",$.systemLanguageId)]))}}});const{Criteria:_}=Shopware.Data,{warn:P}=Shopware.Utils.debug,q=Shopware.Service("repositoryFactory").create("language"),I=new _().addAssociation("swagLanguagePackLanguage").addAssociation("locale").addFilter(_.not("AND",[_.equals("swagLanguagePackLanguage.administrationActive",!1)])),f=Shopware.Plugin.addBootPromise();let h;q.search(I).then(e=>{e.forEach(a=>{Shopware.Locale.getByName(a.locale.code)||(h=a.locale.code,Shopware.Locale.register(a.locale.code,{}))}),f()}).catch(()=>{let e='Unable to register "packLanguages".';h!==void 0&&(e+=` Problems occurred while installing language: ${h}`),P("SwagLanguagePack",e),f()});const A=["ad","ae","af","ag","ai","al","am","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es-ca","es-ga","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb-eng","gb-nir","gb-sct","gb-wls","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tr","tt","tv","tw","tz","ua","ug","um","un","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","xk","ye","yt","za","zm","zw"];function x(e,a){return{template:`<div><img :src="assetFilter('swaglanguagepack/static/flags/${a}.svg')"></div>`,name:e,mounted(){console.warn(`DEPRECATED: Replace '<${e} />' with '<img :src="assetFilter('swaglanguagepack/static/flags/${a}.svg')">'`)},computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}}for(const e of A){const a=`swag-language-pack-flag-${e}`;Shopware.Component.register(a,()=>x(a,e))}const D="modulepreload",F=function(e){return window.__sw__.assetPath+"/bundles/swaglanguagepack/administration/"+e},v={},R=function(a,t,s){let i=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),g=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));i=Promise.allSettled(t.map(l=>{if(l=F(l),l in v)return;v[l]=!0;const p=l.endsWith(".css"),L=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${L}`))return;const r=document.createElement("link");if(r.rel=p?"stylesheet":D,p||(r.as="script"),r.crossOrigin="",r.href=l,g&&r.setAttribute("nonce",g),document.head.appendChild(r),p)return new Promise((C,y)=>{r.addEventListener("load",C),r.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${l}`)))})}))}function o(n){const g=new Event("vite:preloadError",{cancelable:!0});if(g.payload=n,window.dispatchEvent(g),!g.defaultPrevented)throw n}return i.then(n=>{for(const g of n||[])g.status==="rejected"&&o(g.reason);return a().catch(o)})};Shopware.Component.override("sw-extension-uninstall-modal",()=>R(()=>import("./index-BJRzMIyM.js"),__vite__mapDeps([0,1])));const{Component:E,Defaults:T}=Shopware,{Criteria:d}=Shopware.Data;E.override("sw-first-run-wizard-welcome",{methods:{getLanguageCriteria(){return this.$super("getLanguageCriteria").addAssociation("swagLanguagePackLanguage").addSorting(d.sort("name","ASC")).addFilter(d.multi("OR",[d.equals("extensions.swagLanguagePackLanguage.id",null),d.equals("extensions.swagLanguagePackLanguage.administrationActive",!0),d.equals("id",T.systemLanguageId)])).setLimit(null)}}});const{Component:j}=Shopware,{Criteria:z}=Shopware.Data;j.override("sw-sales-channel-detail-domains",{computed:{snippetSetCriteria(){const e=this.salesChannel.languages.map(a=>{var t;return(t=a.locale)==null?void 0:t.code}).filter(Boolean);return e.length===0?this.$super("snippetSetCriteria"):this.$super("snippetSetCriteria").addFilter(z.equalsAny("iso",e))}}});const{Component:B}=Shopware;B.override("sw-sales-channel-detail",{methods:{getLoadSalesChannelCriteria(){return this.$super("getLoadSalesChannelCriteria").addAssociation("languages.locale")}}});const U=`{% block sw_sales_channel_detail_base_general_input_languages %} <sw-sales-channel-defaults-select v-if="!isProductComparison" :salesChannel="salesChannel" :criteria="languageCriteria" propertyName="languages" defaultPropertyName="languageId" propertyNameInDomain="languageId" :propertyLabel="$tc('sw-sales-channel.detail.labelInputLanguages')" :defaultPropertyLabel="$tc('sw-sales-channel.detail.labelInputDefaultLanguage')" :disabled="!acl.can('sales_channel.editor')" ></sw-sales-channel-defaults-select> {% endblock %}`,{Component:N,Defaults:O}=Shopware,{Criteria:u}=Shopware.Data;N.override("sw-sales-channel-detail-base",{template:U,computed:{languageCriteria(){return new u().addAssociation("swagLanguagePackLanguage").addAssociation("locale").addSorting(u.sort("name","ASC")).addFilter(u.multi("OR",[u.equals("extensions.swagLanguagePackLanguage.id",null),u.equals("extensions.swagLanguagePackLanguage.salesChannelActive",!0),u.equals("id",O.systemLanguageId)]))}}});const M=`{% block sw_settings_language_list_content_list_delete_action %} <template #delete-action="{ item, showDelete }"> {% block sw_settings_language_list_content_list_delete_action_language_pack %} <template v-if="isPackLanguage(item.id)"> <sw-context-menu-item v-tooltip.bottom="$tc('swag-language-pack.sw-settings-language-list.deleteLanguagePackTooltip')" class="sw-settings-language-list__delete-action" variant="danger" disabled @click="showDelete(item.id)"> {{ $tc('global.default.delete') }} </sw-context-menu-item> </template> {% endblock %} {% block sw_settings_language_list_content_list_delete_action_language %} <template v-else> <sw-context-menu-item v-tooltip.bottom="tooltipDelete(item.id)" class="sw-settings-language-list__delete-action" variant="danger" :disabled="isDefault(item.id) || !allowDelete" @click="showDelete(item.id)"> {{ $tc('global.default.delete') }} </sw-context-menu-item> </template> {% endblock %} </template> {% endblock %}`,{Component:V}=Shopware,{Criteria:b}=Shopware.Data;V.override("sw-settings-language-list",{template:M,data(){return{packLanguageLanguageIds:[]}},computed:{packLanguageCriteria(){return new b(1,50).addFilter(b.not("and",[b.equals("swagLanguagePackLanguage.id",null)]))}},created(){this.createdComponent()},methods:{createdComponent(){this.getPackLanguageLanguageIds()},getPackLanguageLanguageIds(){this.languageRepository.searchIds(this.packLanguageCriteria).then(e=>{this.packLanguageLanguageIds=e.data})},isPackLanguage(e){return this.packLanguageLanguageIds.includes(e)}}});Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"settings",key:"language",roles:{viewer:{privileges:["sales_channel:read","sales_channel_domain:read"]},editor:{privileges:["swag_language_pack_language:update","user:read","user:update"]}}});const W='{% block swag_language_pack_flag %} <div class="swag-language-pack-flag"> <img :src="assetFilter(`swaglanguagepack/static/flags/${countryCode}.svg`)"> </div> {% endblock %}',{Component:G}=Shopware;G.register("swag-language-pack-flag",{template:W,props:{locale:{type:String,required:!1,default:""}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},countryCode(){return this.locale.split("-")[1].toLowerCase()}}});const H='{% block swag_pack_language_entry %} <div class="swag-language-pack-entry"> {% block swag_pack_language_entry_flag %} <swag-language-pack-flag class="swag-language-pack-entry__flag" :locale="flagLocale"/> {% endblock %} {% block swag_pack_language_entry_content %} <div class="swag-language-pack-entry__content"> {% block swag_pack_language_entry_content_name %} <div class="swag-language-pack-entry__name"> {{ label }} </div> {% endblock %} {% block swag_pack_language_entry_content_description %} <div class="swag-language-pack-entry__description"> {{ description }} </div> {% endblock %} </div> {% endblock %} {% block swag_pack_language_entry_switch %} <sw-switch-field v-model:value="value[field]" ref="packLanguageToggle" :disabled="disabled" /> {% endblock %} </div> {% endblock %}',{Component:J}=Shopware;J.register("swag-pack-language-entry",{template:H,inject:["acl"],props:{value:{type:Object,required:!0},field:{type:String,required:!0},label:{type:String,required:!0},disabled:{type:Boolean,required:!0,default:!1},description:{type:String,required:!1,default:""},flagLocale:{type:String,required:!1,default:""}}});const K='{% block swag_language_pack_settings_icon %} <sw-icon name="default-location-flag"></sw-icon> {% endblock %}',{Component:Q}=Shopware;Q.register("swag-language-pack-settings-icon",{template:K});const X=`{% block swag_language_pack_settings %} <sw-page> {% block swag_language_pack_settings_header %} <template #smart-bar-header> <h2> {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('swag-language-pack.settings.header') }} </h2> </template> {% endblock %} {% block swag_language_pack_settings_actions %} <template #smart-bar-actions> {% block swag_language_pack_settings_actions_save %} <sw-button-process class="swag-language-pack-settings__save-action" variant="primary" :process-success="isSaveSuccessful" :disabled="!acl.can('swag_language_pack_language:update')" @process-finish="onSaveFinish" @click="onSave" > {{ $tc('global.default.save') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block swag_language_pack_settings_content %} <template #content> {% block swag_language_pack_settings_content_card_view %} <sw-card-view> {% block swag_language_pack_settings_content_tabs %} <sw-tabs v-if="!isLoading" class="swag-language-pack-settings__tabs" position-identifier="swag-language-pack-settings__tabs" > {% block swag_language_pack_settings_content_tabs_administration %} <sw-tabs-item class="swag-language-pack-settings__tab-administration" :route="{ name: 'swag.language.pack.index.administration' }" :disabled="!acl.can('language.viewer')" > {{ $tc('swag-language-pack.settings.card.administration.tabTitle') }} </sw-tabs-item> {% endblock %} {% block swag_language_pack_settings_content_tabs_sales_channel %} <sw-tabs-item class="swag-language-pack-settings__tab-sales-channel" :route="{ name: 'swag.language.pack.index.salesChannel' }" :disabled="!acl.can('language.viewer')" > {{ $tc('swag-language-pack.settings.card.salesChannel.tabTitle') }} </sw-tabs-item> {% endblock %} </sw-tabs> {% endblock %} {% block swag_language_pack_settings_content_router_view %} <router-view v-if="!isLoading" :is-loading="isLoading" :pack-languages="packLanguages" /> {% endblock %} {% block swag_language_pack_settings_content_loader %} <sw-loader v-if="isLoading"/> {% endblock %} {% block swag_language_pack_settings_content_verify_user_modal %} <sw-verify-user-modal v-if="confirmPasswordModal" @verified="savePackLanguages" @close="onCloseConfirmPasswordModal" /> {% endblock %} </sw-card-view> {% endblock %} </template> {% endblock %} </sw-page> {% endblock %}`,{Component:Y,Defaults:Z}=Shopware,{Criteria:c}=Shopware.Data;Y.register("swag-language-pack-settings",{template:X,inject:["repositoryFactory","userService","acl"],mixins:["notification"],data(){return{isLoading:!1,isSaveSuccessful:!1,hasChanges:!1,packLanguages:[],fallbackLocaleId:null,confirmPasswordModal:!1}},metaInfo(){return{title:this.$createTitle()}},computed:{packLanguageRepository(){return this.repositoryFactory.create("swag_language_pack_language")},languageRepository(){return this.repositoryFactory.create("language")},userRepository(){return this.repositoryFactory.create("user")},packLanguageCriteria(){return new c().addSorting(c.sort("language.name","ASC")).addAssociation("language.salesChannels.domains").addAssociation("language.locale")}},created(){this.createdComponent()},beforeRouteLeave(e,a,t){t(),this.hasChanges&&window.location.reload()},methods:{createdComponent(){this.loadPackLanguages()},loadPackLanguages(){return this.isLoading=!0,this.packLanguageRepository.search(this.packLanguageCriteria).then(e=>{this.packLanguages=e}).finally(()=>{this.isLoading=!1})},onSave(){this.confirmPasswordModal=!0},onSaveFinish(){this.isSaveSuccessful=!1},onCloseConfirmPasswordModal(){this.confirmPasswordModal=!1},savePackLanguages(){return this.isLoading=!0,this.validateStates(this.packLanguages).then(()=>this.packLanguageRepository.saveAll(this.packLanguages).then(()=>(this.hasChanges=!0,this.resetInvalidUserLanguages())).catch(()=>{this.createNotificationError({message:this.$tc("swag-language-pack.settings.card.messageSaveError")})})).catch(e=>{const t=`<b>${e.map(s=>s.language.name).join(", ")}</b>`;this.createNotificationError({message:this.$tc("swag-language-pack.settings.card.messageSalesChannelActiveError",0,{languages:t}),autoClose:!1})}).finally(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.loadPackLanguages()})},validateStates(e){return new Promise((a,t)=>{const s=e.filter(i=>!(i.salesChannelActive||i.language.salesChannels.length<=0));s.length>0&&t(s),a()})},async resetInvalidUserLanguages(){const e=await this.fetchInvalidLocaleIds();if(!e||e.length<=0)return Promise.resolve();const a=await this.userService.getUser(),t=new c().addFilter(c.equalsAny("localeId",e));let s=await this.userRepository.search(t);return s=s.reduce((i,o)=>(o.localeId=this.fallbackLocaleId,a.data.id===o.id&&Shopware.Service("localeHelper").setLocaleWithId(o.localeId),i.push(o),i),[]),this.userRepository.saveAll(s)},async fetchInvalidLocaleIds(){const e=new c().addFilter(c.equals("extensions.swagLanguagePackLanguage.administrationActive",!1)),a=await this.languageRepository.search(e),t=new c().setIds([Z.systemLanguageId]),s=await this.languageRepository.search(t);return this.fallbackLocaleId=s.first().localeId,a.map(i=>i.localeId)}}});const ee='{% block swag_language_pack_settings_base %} {% block swag_language_pack_settings_base_card_view_language_selection %} <sw-card class="swag-language-pack-settings-base" position-identifier="swag-language-pack-settings-base" :title="$tc(`swag-language-pack.settings.card.${settingsType}.title`)" :disabled="isLoading" > {% block swag_language_pack_settings_base_card_view_card_loader %} <sw-loader v-if="isLoading"/> {% endblock %} {% block swag_language_pack_settings_base_card_view_description%} <div v-html="description" class="swag-language-pack-settings-base__description" /> {% endblock %} {% block swag_language_pack_settings_base_card_view_language_selection_languages %} <template v-for="packLanguage in packLanguages" :key="packLanguage.id" > {% block swag_language_pack_settings_base_card_view_language_selection_language %} <swag-pack-language-entry class="swag-language-pack-settings-base__entry" v-model:value="packLanguage" :field="`${settingsType}Active`" :label="packLanguage.language.name" :description="packLanguage.language.locale?.code" :flag-locale="packLanguage.language.locale?.code" :disabled="!acl.can(\'swag_language_pack_language:update\')" /> {% endblock %} </template> {% endblock %} </sw-card> {% endblock %} {% endblock %}',{Component:ae}=Shopware;ae.register("swag-language-pack-settings-base",{template:ee,inject:["acl"],props:{isLoading:{type:Boolean,required:!0},packLanguages:{type:Array,required:!0},settingsType:{type:String,required:!0,validator(e){return["administration","salesChannel"].includes(e)}}},computed:{description(){const e=`<a href="#/sw/profile/index">
                ${this.$tc("swag-language-pack.settings.card.administration.descriptionTargetLinkText")}
            </a>`;return this.$tc(`swag-language-pack.settings.card.${this.settingsType}.description`,0,{userInterfaceLanguageLink:e})}}});const te='{% block swag_language_pack_settings_administration %} <swag-language-pack-settings-base :isLoading="isLoading" :packLanguages="packLanguages" settingsType="administration"> </swag-language-pack-settings-base> {% endblock %}',{Component:se}=Shopware;se.register("swag-language-pack-settings-administration",{template:te,props:{isLoading:{type:Boolean,required:!0},packLanguages:{type:Array,required:!0}}});const ne='{% block swag_language_pack_settings_sales_channel %} <swag-language-pack-settings-base :isLoading="isLoading" :packLanguages="packLanguages" settingsType="salesChannel"> </swag-language-pack-settings-base> {% endblock %}',{Component:ie}=Shopware;ie.register("swag-language-pack-settings-sales-channel",{template:ne,props:{isLoading:{type:Boolean,required:!0},packLanguages:{type:Array,required:!0}}});const{Module:ge}=Shopware;ge.register("swag-language-pack",{type:"plugin",name:"SwagLanguagePack",title:"swag-language-pack.general.mainMenuItemGeneral",description:"swag-language-pack.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"regular-cog",routes:{index:{component:"swag-language-pack-settings",path:"index",redirect:{name:"swag.language.pack.index.administration"},meta:{parentPath:"sw.settings.index",privilege:"language.viewer"},children:{administration:{component:"swag-language-pack-settings-administration",path:"administration",meta:{parentPath:"sw.settings.index",privilege:"language.viewer"}},salesChannel:{component:"swag-language-pack-settings-sales-channel",path:"sales-channel",meta:{parentPath:"sw.settings.index",privilege:"language.viewer"}}}}},settingsItem:{group:"plugins",to:"swag.language.pack.index",icon:"regular-language",backgroundEnabled:!0,privilege:"language.viewer"}});const{Component:le}=Shopware,{Criteria:w}=Shopware.Data;le.override("sw-users-permissions-user-detail",{computed:{languageCriteria(){const e=this.$super("languageCriteria");return e.addFilter(w.multi("OR",[w.equals("extensions.swagLanguagePackLanguage.id",null),w.equals("extensions.swagLanguagePackLanguage.administrationActive",!0),w.equals("id",Shopware.Defaults.systemLanguageId)])),e}}});const{Component:re}=Shopware,{Criteria:k}=Shopware.Data;re.override("sw-users-permissions-user-create",{computed:{languageCriteria(){return this.$super("languageCriteria").addFilter(k.multi("OR",[k.equals("extensions.swagLanguagePackLanguage.id",null),k.equals("extensions.swagLanguagePackLanguage.administrationActive",!0),k.equals("id",Shopware.Defaults.systemLanguageId)]))}},methods:{onSave(){this.$super("onSave")}}});
