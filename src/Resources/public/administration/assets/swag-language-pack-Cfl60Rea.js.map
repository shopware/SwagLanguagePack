{"version":3,"mappings":"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","names":["Component","Defaults","Criteria","warn","languageRepository","criteria","resolve","errorLocale","result","language","message","locales","_a","template$8","template","template$7","languageId","template$6","template$5","Filter","flagLocale","value","template$4","template$3","to","from","next","invalidLanguages","languages","packLanguage","packLanguages","reject","invalidLocales","currentUser","invalidUserCriteria","invalidUsers","accumulator","user","invalidAdminLanguagesCriteria","invalidAdminLanguages","fallbackLanguageCriteria","fallbackLanguage","template$2","userInterfaceLanguageLink","template$1","Module"],"ignoreList":[],"sources":["../../../app/administration/src/component/structure/sw-language-switch/extension/index.js","../../../app/administration/src/init/locale.init.js","../../../app/administration/src/module/sw-extension/index.ts","../../../app/administration/src/module/sw-first-run-wizard/extension/sw-first-run-wizard-welcome/index.js","../../../app/administration/src/module/sw-sales-channel-detail/component/sw-sales-channel-detail-domains/index.js","../../../app/administration/src/module/sw-sales-channel-detail/extension/sw-sales-channel-detail/index.js","../../../app/administration/src/module/sw-sales-channel-detail/extension/sw-sales-channel-detail-base/sw-sales-channel-detail-base.html.twig","../../../app/administration/src/module/sw-sales-channel-detail/extension/sw-sales-channel-detail-base/index.js","../../../app/administration/src/module/sw-settings-language/extension/sw-settings-language-list/sw-settings-language-list.html.twig","../../../app/administration/src/module/sw-settings-language/extension/sw-settings-language-list/index.js","../../../app/administration/src/module/swag-language-pack-settings/acl/index.js","../../../app/administration/src/module/swag-language-pack-settings/component/swag-language-pack-flag/swag-language-pack-flag.html.twig","../../../app/administration/src/module/swag-language-pack-settings/component/swag-language-pack-flag/index.js","../../../app/administration/src/module/swag-language-pack-settings/component/swag-pack-language-entry/swag-pack-language-entry.html.twig","../../../app/administration/src/module/swag-language-pack-settings/component/swag-pack-language-entry/index.js","../../../app/administration/src/module/swag-language-pack-settings/component/swag-language-pack-settings-icon/swag-language-pack-settings-icon.html.twig","../../../app/administration/src/module/swag-language-pack-settings/component/swag-language-pack-settings-icon/index.js","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings/swag-language-pack-settings.html.twig","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings/index.js","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-base/swag-language-pack-settings-base.html.twig","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-base/index.js","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-administration/swag-language-pack-settings-administration.html.twig","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-administration/index.js","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-sales-channel/swag-language-pack-settings-sales-channel.html.twig","../../../app/administration/src/module/swag-language-pack-settings/page/swag-language-pack-settings-sales-channel/index.js","../../../app/administration/src/module/swag-language-pack-settings/index.js","../../../app/administration/src/module/sw-users-permissions/extension/sw-users-permissions-user-detail/index.js","../../../app/administration/src/module/sw-users-permissions/extension/sw-users-permissions-user-create/index.js"],"sourcesContent":["const { Component, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-language-switch', {\n    computed: {\n        languageCriteria() {\n            return this.$super('languageCriteria').addFilter(\n                Criteria.multi('OR', [\n                    Criteria.equals('extensions.swagLanguagePackLanguage.id', null),\n                    Criteria.equals('extensions.swagLanguagePackLanguage.salesChannelActive', true),\n                    Criteria.equals('id', Defaults.systemLanguageId),\n                ]),\n            );\n        },\n    },\n});\n","const { Criteria } = Shopware.Data;\nconst { warn } = Shopware.Utils.debug;\n\nconst languageRepository = Shopware.Service('repositoryFactory').create('language');\nconst criteria = (new Criteria())\n    .addAssociation('swagLanguagePackLanguage')\n    .addAssociation('locale')\n    .addFilter(Criteria.not('AND', [Criteria.equals('swagLanguagePackLanguage.administrationActive', false)]));\n\nconst resolve = Shopware.Plugin.addBootPromise();\n\nlet errorLocale;\nlanguageRepository.search(criteria).then((result) => {\n    result.forEach((language) => {\n        if (Shopware.Locale.getByName(language.locale.code)) {\n            return;\n        }\n\n        errorLocale = language.locale.code;\n        Shopware.Locale.register(language.locale.code, {});\n    });\n\n    resolve();\n}).catch(() => {\n    let message = 'Unable to register \"packLanguages\".';\n\n    if (errorLocale !== undefined) {\n        message += ` Problems occurred while installing language: ${errorLocale}`;\n    }\n\n    warn('SwagLanguagePack', message);\n    resolve();\n});\n","Shopware.Component.override('sw-extension-uninstall-modal', () => import('./component/sw-extension-uninstall-modal'));\n","const { Component, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-first-run-wizard-welcome', {\n    methods: {\n        getLanguageCriteria() {\n            return this.$super('getLanguageCriteria')\n                .addAssociation('swagLanguagePackLanguage')\n                .addSorting(Criteria.sort('name', 'ASC'))\n                .addFilter(Criteria.multi('OR', [\n                    Criteria.equals('extensions.swagLanguagePackLanguage.id', null),\n                    Criteria.equals('extensions.swagLanguagePackLanguage.administrationActive', true),\n                    Criteria.equals('id', Defaults.systemLanguageId),\n                ]))\n                .setLimit(null);\n        },\n    },\n});\n","const { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-sales-channel-detail-domains', {\n    computed: {\n        snippetSetCriteria() {\n            const locales = this.salesChannel.languages.map(language => language.locale?.code).filter(Boolean);\n\n            if (locales.length === 0) {\n                return this.$super('snippetSetCriteria');\n            }\n\n            return this.$super('snippetSetCriteria')\n                .addFilter(Criteria.equalsAny('iso', locales));\n        },\n    },\n});\n","const { Component } = Shopware;\n\nComponent.override('sw-sales-channel-detail', {\n    methods: {\n        getLoadSalesChannelCriteria() {\n            return this.$super('getLoadSalesChannelCriteria')\n                .addAssociation('languages.locale');\n        },\n    },\n});\n","{% block sw_sales_channel_detail_base_general_input_languages %}\n    <sw-sales-channel-defaults-select\n        v-if=\"!isProductComparison\"\n        :salesChannel=\"salesChannel\"\n        :criteria=\"languageCriteria\"\n        propertyName=\"languages\"\n        defaultPropertyName=\"languageId\"\n        propertyNameInDomain=\"languageId\"\n        :propertyLabel=\"$tc('sw-sales-channel.detail.labelInputLanguages')\"\n        :defaultPropertyLabel=\"$tc('sw-sales-channel.detail.labelInputDefaultLanguage')\"\n        :disabled=\"!acl.can('sales_channel.editor')\"\n    ></sw-sales-channel-defaults-select>\n{% endblock %}\n","import template from './sw-sales-channel-detail-base.html.twig';\n\nconst { Component, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-sales-channel-detail-base', {\n    template,\n\n    computed: {\n        languageCriteria() {\n            return (new Criteria())\n                .addAssociation('swagLanguagePackLanguage')\n                .addAssociation('locale')\n                .addSorting(Criteria.sort('name', 'ASC'))\n                .addFilter(Criteria.multi('OR', [\n                    Criteria.equals('extensions.swagLanguagePackLanguage.id', null),\n                    Criteria.equals('extensions.swagLanguagePackLanguage.salesChannelActive', true),\n                    Criteria.equals('id', Defaults.systemLanguageId),\n                ]));\n        },\n    },\n});\n","{% block sw_settings_language_list_content_list_delete_action %}\n    <template #delete-action=\"{ item, showDelete }\">\n\n        {% block sw_settings_language_list_content_list_delete_action_language_pack %}\n            <template v-if=\"isPackLanguage(item.id)\">\n                <sw-context-menu-item\n                    v-tooltip.bottom=\"$tc('swag-language-pack.sw-settings-language-list.deleteLanguagePackTooltip')\"\n                    class=\"sw-settings-language-list__delete-action\"\n                    variant=\"danger\"\n                    disabled\n                    @click=\"showDelete(item.id)\"\n                >\n                    {{ $tc('global.default.delete') }}\n                </sw-context-menu-item>\n            </template>\n        {% endblock %}\n\n        {% block sw_settings_language_list_content_list_delete_action_language %}\n            <template v-else>\n                <sw-context-menu-item\n                    v-tooltip.bottom=\"tooltipDelete(item.id)\"\n                    class=\"sw-settings-language-list__delete-action\"\n                    variant=\"danger\"\n                    :disabled=\"isDefault(item.id) || !allowDelete\"\n                    @click=\"showDelete(item.id)\"\n                >\n                    {{ $tc('global.default.delete') }}\n                </sw-context-menu-item>\n            </template>\n        {% endblock %}\n\n    </template>\n{% endblock %}\n","import template from './sw-settings-language-list.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-settings-language-list', {\n    template,\n\n    data() {\n        return {\n            packLanguageLanguageIds: [],\n        };\n    },\n\n    computed: {\n        packLanguageCriteria() {\n            return (new Criteria(1, 50)).addFilter(\n                Criteria.not('and', [\n                    Criteria.equals('swagLanguagePackLanguage.id', null),\n                ]),\n            );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getPackLanguageLanguageIds();\n        },\n\n        getPackLanguageLanguageIds() {\n            this.languageRepository.searchIds(this.packLanguageCriteria).then((result) => {\n                this.packLanguageLanguageIds = result.data;\n            });\n        },\n\n        isPackLanguage(languageId) {\n            return this.packLanguageLanguageIds.includes(languageId);\n        },\n    },\n});\n","Shopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'settings',\n    key: 'language',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel:read',\n                'sales_channel_domain:read',\n            ],\n        },\n        editor: {\n            privileges: [\n                'swag_language_pack_language:update',\n                'user:read',\n                'user:update',\n            ],\n        },\n    },\n});\n","{% block swag_language_pack_flag %}\n<div class=\"swag-language-pack-flag\">\n    <img :src=\"assetFilter(`swaglanguagepack/static/flags/${countryCode}.svg`)\">\n</div>\n{% endblock %}\n","import template from './swag-language-pack-flag.html.twig';\nimport './swag-language-pack-flag.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @deprecated tag:v6.0.0 - Will be removed. Use native `img` tag instead\n */\nComponent.register('swag-language-pack-flag', {\n    template,\n\n    props: {\n        locale: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n        countryCode() {\n            return this.locale.split('-')[1].toLowerCase();\n        },\n    },\n});\n","{% block swag_pack_language_entry %}\n<div class=\"swag-language-pack-entry\">\n\n    {% block swag_pack_language_entry_flag %}\n    <div class=\"swag-language-pack-entry__flag-container\">\n        <img :src=\"flagSource(flagLocale)\" :alt=\"flagLocale\" class=\"swag-language-pack-entry__flag\"/>\n    </div>\n    {% endblock %}\n\n    {% block swag_pack_language_entry_content %}\n    <div class=\"swag-language-pack-entry__content\">\n\n        {% block swag_pack_language_entry_content_name %}\n        <div class=\"swag-language-pack-entry__name\">\n            {{ label }}\n        </div>\n        {% endblock %}\n\n        {% block swag_pack_language_entry_content_description %}\n        <div class=\"swag-language-pack-entry__description\">\n            {{ description }}\n        </div>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    {% block swag_pack_language_entry_switch %}\n    <mt-switch\n        class=\"swag-language-pack-entry__switch\"\n        ref=\"packLanguageToggle\"\n        :checked=\"value[field]\"\n        :disabled=\"disabled\"\n        @change=\"onChange\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './swag-pack-language-entry.html.twig';\nimport './swag-pack-language-entry.scss';\n\nconst { Component, Filter } = Shopware;\n\nComponent.register('swag-pack-language-entry', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        value: {\n            type: Object,\n            required: true,\n        },\n\n        field: {\n            type: String,\n            required: true,\n        },\n\n        label: {\n            type: String,\n            required: true,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: true,\n            default: false,\n        },\n\n        description: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        flagLocale: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    computed: {\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n    },\n\n    methods: {\n        flagSource(flagLocale) {\n            flagLocale = flagLocale.split('-')[1].toLowerCase();\n\n            return this.assetFilter(`/swaglanguagepack/static/flags/${flagLocale}.svg`);\n        },\n\n        onChange(value) {\n            this.value[this.field] = value;\n        }\n    },\n});\n","{% block swag_language_pack_settings_icon %}{% endblock %}\n","import template from './swag-language-pack-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\n/** @deprecated tag:v6.0.0 - Will be removed without replacement */\nComponent.register('swag-language-pack-settings-icon', {\n    template,\n});\n","{% block swag_language_pack_settings %}\n<sw-page class=\"swag-language-pack-settings\">\n\n    {% block swag_language_pack_settings_header %}\n    <template #smart-bar-header>\n        <h2>\n            <span>{{ $tc('sw-settings.index.title') }}</span>\n            <mt-icon\n                name=\"regular-chevron-right-xs\"\n                size=\"14px\"\n            />\n            <span>{{ $tc('swag-language-pack.settings.header') }}</span>\n        </h2>\n    </template>\n    {% endblock %}\n\n    {% block swag_language_pack_settings_actions %}\n    <template #smart-bar-actions>\n\n        {% block swag_language_pack_settings_actions_save %}\n        <sw-button-process\n            class=\"swag-language-pack-settings__save-action\"\n            variant=\"primary\"\n            :process-success=\"isSaveSuccessful\"\n            :disabled=\"!acl.can('swag_language_pack_language:update')\"\n            @process-finish=\"onSaveFinish\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button-process>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block swag_language_pack_settings_content %}\n    <template #content>\n\n        {% block swag_language_pack_settings_content_card_view %}\n        <sw-card-view>\n\n            {% block swag_language_pack_settings_content_tabs %}\n            <sw-tabs\n                v-if=\"!isLoading\"\n                class=\"swag-language-pack-settings__tabs\"\n                position-identifier=\"swag-language-pack-settings__tabs\"\n            >\n\n                {% block swag_language_pack_settings_content_tabs_administration %}\n                <sw-tabs-item\n                    class=\"swag-language-pack-settings__tab-administration\"\n                    :route=\"{ name: 'swag.language.pack.index.administration' }\"\n                    :disabled=\"!acl.can('language.viewer')\"\n                >\n                    {{ $tc('swag-language-pack.settings.card.administration.tabTitle') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                {% block swag_language_pack_settings_content_tabs_sales_channel %}\n                <sw-tabs-item\n                    class=\"swag-language-pack-settings__tab-sales-channel\"\n                    :route=\"{ name: 'swag.language.pack.index.salesChannel' }\"\n                    :disabled=\"!acl.can('language.viewer')\"\n                >\n                    {{ $tc('swag-language-pack.settings.card.salesChannel.tabTitle') }}\n                </sw-tabs-item>\n                {% endblock %}\n            </sw-tabs>\n            {% endblock %}\n\n            {% block swag_language_pack_settings_content_router_view %}\n            <router-view\n                v-if=\"!isLoading\"\n                :is-loading=\"isLoading\"\n                :pack-languages=\"packLanguages\"\n            />\n            {% endblock %}\n\n            {% block swag_language_pack_settings_content_loader %}\n            <mt-loader v-if=\"isLoading\"/>\n            {% endblock %}\n\n            {% block swag_language_pack_settings_content_verify_user_modal %}\n            <sw-verify-user-modal\n                v-if=\"confirmPasswordModal\"\n                @verified=\"savePackLanguages\"\n                @close=\"onCloseConfirmPasswordModal\"\n            />\n            {% endblock %}\n\n        </sw-card-view>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n","import template from './swag-language-pack-settings.html.twig';\n\nconst { Component, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-language-pack-settings', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'userService',\n        'acl',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            hasChanges: false,\n            packLanguages: [],\n            fallbackLocaleId: null,\n            confirmPasswordModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        packLanguageRepository() {\n            return this.repositoryFactory.create('swag_language_pack_language');\n        },\n\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        userRepository() {\n            return this.repositoryFactory.create('user');\n        },\n\n        packLanguageCriteria() {\n            return (new Criteria())\n                .addSorting(Criteria.sort('language.name', 'ASC'))\n                .addAssociation('language.salesChannels.domains')\n                .addAssociation('language.locale');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeRouteLeave(to, from, next) {\n        next();\n\n        if (this.hasChanges) {\n            window.location.reload();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadPackLanguages();\n        },\n\n        loadPackLanguages() {\n            this.isLoading = true;\n\n            return this.packLanguageRepository.search(this.packLanguageCriteria).then((result) => {\n                this.packLanguages = result;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onSave() {\n            this.confirmPasswordModal = true;\n        },\n\n        onSaveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onCloseConfirmPasswordModal() {\n            this.confirmPasswordModal = false;\n        },\n\n        savePackLanguages() {\n            this.isLoading = true;\n            return this.validateStates(this.packLanguages).then(() => {\n                return this.packLanguageRepository.saveAll(this.packLanguages).then(() => {\n                    this.hasChanges = true;\n                    return this.resetInvalidUserLanguages();\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('swag-language-pack.settings.card.messageSaveError'),\n                    });\n                });\n            }).catch((invalidLanguages) => {\n                const languageList = invalidLanguages.map(packLanguage => packLanguage.language.name);\n                const languages = `<b>${languageList.join(', ')}</b>`;\n\n                this.createNotificationError({\n                    message: this.$tc('swag-language-pack.settings.card.messageSalesChannelActiveError', {\n                        languages,\n                    }),\n                    autoClose: false,\n                });\n            }).finally(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n\n                this.loadPackLanguages();\n            });\n        },\n\n        validateStates(packLanguages) {\n            return new Promise((resolve, reject) => {\n                const invalidLanguages = packLanguages.filter((packLanguage) => {\n                    return !(packLanguage.salesChannelActive || packLanguage.language.salesChannels.length <= 0);\n                });\n\n                if (invalidLanguages.length > 0) {\n                    reject(invalidLanguages);\n                }\n                resolve();\n            });\n        },\n\n        async resetInvalidUserLanguages() {\n            const invalidLocales = await this.fetchInvalidLocaleIds();\n            if (!invalidLocales || invalidLocales.length <= 0) {\n                return Promise.resolve();\n            }\n\n            const currentUser = await this.userService.getUser();\n            const invalidUserCriteria = (new Criteria()).addFilter(\n                Criteria.equalsAny('localeId', invalidLocales),\n            );\n\n            let invalidUsers = await this.userRepository.search(invalidUserCriteria);\n            invalidUsers = invalidUsers.reduce((accumulator, user) => {\n                user.localeId = this.fallbackLocaleId;\n\n                // If we change the locale of the current logged in user\n                if (currentUser.data.id === user.id) {\n                    Shopware.Service('localeHelper').setLocaleWithId(user.localeId);\n                }\n\n                accumulator.push(user);\n\n                return accumulator;\n            }, []);\n\n            return this.userRepository.saveAll(invalidUsers);\n        },\n\n        async fetchInvalidLocaleIds() {\n            const invalidAdminLanguagesCriteria = (new Criteria())\n                .addFilter(Criteria.equals('extensions.swagLanguagePackLanguage.administrationActive', false));\n            const invalidAdminLanguages = await this.languageRepository.search(invalidAdminLanguagesCriteria);\n\n            const fallbackLanguageCriteria = (new Criteria()).setIds([Defaults.systemLanguageId]);\n            const fallbackLanguage = await this.languageRepository.search(fallbackLanguageCriteria);\n            this.fallbackLocaleId = fallbackLanguage.first().localeId;\n\n            return invalidAdminLanguages.map(language => language.localeId);\n        },\n    },\n});\n","{% block swag_language_pack_settings_base %}\n{% block swag_language_pack_settings_base_card_view_language_selection %}\n    <mt-card\n        class=\"swag-language-pack-settings-base\"\n        position-identifier=\"swag-language-pack-settings-base\"\n        :title=\"$tc(`swag-language-pack.settings.card.${settingsType}.title`)\"\n        :disabled=\"isLoading\"\n    >\n\n        {% block swag_language_pack_settings_base_card_view_card_loader %}\n        <mt-loader v-if=\"isLoading\"/>\n        {% endblock %}\n\n        {% block swag_language_pack_settings_base_card_view_description%}\n        <div\n            v-html=\"description\"\n            class=\"swag-language-pack-settings-base__description\"\n        />\n        {% endblock %}\n\n        {% block swag_language_pack_settings_base_card_view_language_selection_languages %}\n        <template\n            v-for=\"packLanguage in packLanguages\"\n            :key=\"packLanguage.id\"\n        >\n            {% block swag_language_pack_settings_base_card_view_language_selection_language %}\n            <swag-pack-language-entry\n                v-model:value=\"packLanguage\"\n                class=\"swag-language-pack-settings-base__entry\"\n                :field=\"`${settingsType}Active`\"\n                :label=\"packLanguage.language.name\"\n                :description=\"packLanguage.language.locale?.code\"\n                :flag-locale=\"packLanguage.language.locale?.code\"\n                :disabled=\"!acl.can('swag_language_pack_language:update')\"\n            />\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n    </mt-card>\n{% endblock %}\n{% endblock %}\n","import template from './swag-language-pack-settings-base.html.twig';\nimport './swag-language-pack-settings-base.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-language-pack-settings-base', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n\n        packLanguages: {\n            type: Array,\n            required: true,\n        },\n\n        settingsType: {\n            type: String,\n            required: true,\n            validator(value) {\n                return ['administration', 'salesChannel'].includes(value);\n            },\n        },\n    },\n\n    computed: {\n        description() {\n            const userInterfaceLanguageLink = `<a href=\"#/sw/profile/index\">\n                ${this.$tc('swag-language-pack.settings.card.administration.descriptionTargetLinkText')}\n            </a>`;\n\n            return this.$tc(`swag-language-pack.settings.card.${this.settingsType}.description`, 0, {\n                userInterfaceLanguageLink,\n            });\n        },\n    },\n});\n","{% block swag_language_pack_settings_administration %}\n    <swag-language-pack-settings-base\n        :isLoading=\"isLoading\"\n        :packLanguages=\"packLanguages\"\n        settingsType=\"administration\">\n    </swag-language-pack-settings-base>\n{% endblock %}","import template from './swag-language-pack-settings-administration.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-language-pack-settings-administration', {\n    template,\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n\n        packLanguages: {\n            type: Array,\n            required: true,\n        },\n    },\n});\n","{% block swag_language_pack_settings_sales_channel %}\n    <swag-language-pack-settings-base\n        :isLoading=\"isLoading\"\n        :packLanguages=\"packLanguages\"\n        settingsType=\"salesChannel\">\n    </swag-language-pack-settings-base>\n{% endblock %}\n","import template from './swag-language-pack-settings-sales-channel.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-language-pack-settings-sales-channel', {\n    template,\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n\n        packLanguages: {\n            type: Array,\n            required: true,\n        },\n    },\n});\n","import './acl';\nimport './component/swag-language-pack-flag';\nimport './component/swag-pack-language-entry';\nimport './component/swag-language-pack-settings-icon';\n\nimport './page/swag-language-pack-settings';\nimport './page/swag-language-pack-settings-base';\nimport './page/swag-language-pack-settings-administration';\nimport './page/swag-language-pack-settings-sales-channel';\n\nconst { Module } = Shopware;\n\nModule.register('swag-language-pack', {\n    type: 'plugin',\n    name: 'SwagLanguagePack',\n    title: 'swag-language-pack.general.mainMenuItemGeneral',\n    description: 'swag-language-pack.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n\n    routes: {\n        index: {\n            component: 'swag-language-pack-settings',\n            path: 'index',\n            redirect: {\n                name: 'swag.language.pack.index.administration',\n            },\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'language.viewer',\n            },\n            children: {\n                administration: {\n                    component: 'swag-language-pack-settings-administration',\n                    path: 'administration',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'language.viewer',\n                    },\n                },\n                salesChannel: {\n                    component: 'swag-language-pack-settings-sales-channel',\n                    path: 'sales-channel',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'language.viewer',\n                    },\n                },\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'swag.language.pack.index',\n        icon: 'regular-language',\n        backgroundEnabled: true,\n        privilege: 'language.viewer',\n    },\n});\n","const { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-users-permissions-user-detail', {\n    computed: {\n        languageCriteria() {\n            const criteria = this.$super('languageCriteria');\n            criteria.addFilter(Criteria.multi('OR', [\n                Criteria.equals('extensions.swagLanguagePackLanguage.id', null),\n                Criteria.equals('extensions.swagLanguagePackLanguage.administrationActive', true),\n                Criteria.equals('id', Shopware.Defaults.systemLanguageId),\n            ]));\n\n            return criteria;\n        },\n    },\n});\n","const { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-users-permissions-user-create', {\n    computed: {\n        languageCriteria() {\n            return this.$super('languageCriteria')\n                .addFilter(Criteria.multi('OR', [\n                    Criteria.equals('extensions.swagLanguagePackLanguage.id', null),\n                    Criteria.equals('extensions.swagLanguagePackLanguage.administrationActive', true),\n                    Criteria.equals('id', Shopware.Defaults.systemLanguageId),\n                ]));\n        },\n    },\n\n    methods: {\n        onSave() {\n            // This override is needed to fix the broken inheritance\n            this.$super('onSave');\n        },\n    },\n});\n"],"file":"assets/swag-language-pack-Cfl60Rea.js"}